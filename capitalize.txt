// --- Directions
// Write a function that accepts a string.  The function should
// capitalize the first letter of each word in the string then
// return the capitalized string.
// --- Examples
//   capitalize('a short sentence') --> 'A Short Sentence'
//   capitalize('a lazy fox') --> 'A Lazy Fox'
//   capitalize('look, it is working!') --> 'Look, It Is Working!'


// url: github.com - guardar repositorio.

//escrito en C#

public string capitalize(string sentence)
{
  string cadena;
  string[] str = sentence.Split(' '); //separa la sentencia por cada espacio  y guarda las palabras en un arreglo
  
  for(int i=0;i< str.lenght;i++)
  {
    string cad;
    char aux;
    for(int j=0;j<str[i].lenght;j++ ) //convierte cada inicio de palabra en mayuscula
    {
      aux = str[j];
    	if(str[j].element == 0)
      	 aux = toupper(str[j]);
           
      cad+=aux;
    }
    
    cadena = cadena + " " + cad ;
  }
  
  return cadena;
}


public string capitalize(string sentence) //usando funcion "Replace" con un ciclo
{
  string cadena;
  string[] str = sentence.Split(' '); 
  char inicial;
  
  for(int i=0;i< str.lenght;i++)
  {
    inicial = str[i].element(0);
    
    cadena = cadena + " " + str[i].Replace(inicial,toupper(incial));
  }
  
  return cadena;
}


// --- Directions
// Given an integer, return an integer that is the reverse
// ordering of numbers.
// --- Examples
//   reverseInt(15) === 51
//   reverseInt(981) === 189
//   reverseInt(500) === 5
//   reverseInt(-15) === -51
//   reverseInt(-90) === -9



public int reverseInt(int n) {
  
  string valCad = System.Convert.ToString(n);
  string valNuevo= "";
  
  if(valCad.element(0) == '-')
      valNuevo+='-';
  
  for(int i=valCad.length-1;i>=0;i--)
  {
    if(valCad.element(i) != '0' && valCad.element(i) != '-')
    	valNuevo+=valCad.element(i);
  }
  
	int valFinal = Int32.Parse(valNuevo);
  return valFinal;

}






